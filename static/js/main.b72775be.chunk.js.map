{"version":3,"sources":["Launch.js","ListView.js","App.js","index.js"],"names":["Launch","props","date","isFull","launch","years","months","hours","minutes","Date","state","time","now","this","intervalId","setInterval","setState","clearInterval","delta","isLaunched","Math","floor","days","seconds","formatTwoDigitNumber","number","slice","mission","vehicle","location","timer","formattedDate","_formatDate","_formatDateDifference","_numToString","n","text_forms","n1","abs","toString","React","Component","ListView","rows","launchList","map","key","className","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b72775be.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Launch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.date = {date: null, isFull: false};\r\n        if (props.launch.years !== null && props.launch.months !== null && props.launch.date !== null && props.launch.hours !== null && props.launch.minutes !== null) {\r\n            this.date.date = new Date(props.launch.years, props.launch.months - 1, props.launch.date, props.launch.hours, props.launch.minutes);\r\n            this.date.isFull = true;\r\n        }\r\n        this.state = {\r\n            time: Date.now() - this.date.date\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.date.isFull) {\r\n            this.intervalId = setInterval(() => this.setState({time: Date.now() - this.date.date}), 5000);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalId);\r\n    }\r\n\r\n    _formatDateDifference() {\r\n        let delta;\r\n        let isLaunched = false;\r\n        if (this.state.time > 0) {\r\n            delta = Math.floor(this.state.time / 1000);\r\n            isLaunched = true;\r\n        } else {\r\n            delta = Math.floor(-this.state.time / 1000);\r\n        }\r\n        let days = Math.floor(delta / 86400);\r\n        delta -= days * 86400;\r\n        let hours = Math.floor(delta / 3600) % 24;\r\n        delta -= hours * 3600;\r\n        let minutes = Math.floor(delta / 60) % 60;\r\n        delta -= minutes * 60;\r\n        let seconds = delta % 60;\r\n        return {days, hours, minutes, seconds, isLaunched};\r\n    }\r\n\r\n    _formatDate(date) {\r\n        function formatTwoDigitNumber(number) {\r\n            return number !== null ? ('0' + number).slice(-2) : null\r\n        }\r\n\r\n        return `${\r\n            date.years}${\r\n            date.months !== null ? `/${formatTwoDigitNumber(date.months)}` : ''}${\r\n            date.date !== null ? `/${formatTwoDigitNumber(date.date)}` : ''}${\r\n            date.hours !== null ? ` ${formatTwoDigitNumber(date.hours)}` : ''}${\r\n            date.minutes !== null ? `:${formatTwoDigitNumber(date.minutes)}` : ''}`;\r\n    }\r\n\r\n    static _numToString(n, text_forms) {\r\n        n = Math.abs(n) % 100;\r\n        let n1 = n % 10;\r\n        if (n > 10 && n < 20) {\r\n            return n.toString() + ' ' + text_forms[2];\r\n        }\r\n        if (n1 > 1 && n1 < 5) {\r\n            return n.toString() + ' ' + text_forms[1];\r\n        }\r\n        if (n1 === 1) {\r\n            return n.toString() + ' ' + text_forms[0];\r\n        }\r\n        return n.toString() + ' ' + text_forms[2];\r\n    }\r\n\r\n    render() {\r\n        const {mission, vehicle, location} = this.props;\r\n        let timer = 'Точное время не задано';\r\n        const formattedDate = this._formatDate(this.props.launch);\r\n        if (this.date.isFull) {\r\n            const {days, hours, minutes, seconds, isLaunched} = this._formatDateDifference();\r\n            timer = (isLaunched ? 'Прошло ' : 'Осталось ') +\r\n                Launch._numToString(days, ['день', 'дня', 'дней']) + ', '+\r\n                Launch._numToString(hours, ['час', 'часа', 'часов']) +', '+\r\n                Launch._numToString(minutes, ['минута', 'минуты', 'минут']);\r\n        }\r\n        return (<tr>\r\n            <td>{mission}</td>\r\n            <td>{vehicle}</td>\r\n            <td>{location}</td>\r\n            <td>{formattedDate}</td>\r\n            <td>{timer}</td>\r\n        </tr>);\r\n    }\r\n}\r\n\r\nexport default Launch;\r\n","import React from 'react';\r\nimport Launch from \"./Launch\";\r\nimport launchList from './launches';\r\nimport './ListView.css'\r\n\r\nclass ListView extends React.Component {\r\n    render() {\r\n        const rows = launchList.map(launch => (\r\n            <Launch key={launch.mission} mission={launch.mission} vehicle={launch.vehicle} location={launch.location} launch={launch.launch}/>\r\n        ));\r\n        return (<table className='table'>\r\n            <caption>Время запуска шатлов SpaceX</caption>\r\n            <thead>\r\n            <tr>\r\n                <th>Миссия</th>\r\n                <th>Носитель</th>\r\n                <th>Место запуска</th>\r\n                <th>Время</th>\r\n                <th>Таймер</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {rows}\r\n            </tbody>\r\n        </table>)\r\n    }\r\n}\r\n\r\nexport default ListView;\r\n","import React from 'react';\nimport './App.css';\nimport ListView from \"./ListView\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"content\">\n                <ListView />\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}